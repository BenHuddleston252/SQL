# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 

CREATE TABLE Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

-- How many tracks has the Weeknd made?
SELECT artist_name, 
COUNT(track_name) tracks
FROM spotifydata
WHERE artist_name = 'The Weeknd';

-- what artist are super popular, popular, and not very popular?
SELECT artist_name, SUM(popularity),
CASE WHEN SUM(popularity) BETWEEN 138 AND 369 THEN 'Very Popular'
WHEN SUM(popularity) BETWEEN 86 AND 95 THEN 'Popular'
WHEN SUM(popularity) BETWEEN 69 AND 82 THEN 'Not Very Popular'
END AS popular
FROM spotifydata
GROUP BY artist_name
ORDER BY SUM(popularity) DESC;

-- what track has the highest tempo?
SELECT MAX(tempo)
FROM spotifydata;

-- List all spotify tracks from loudest to quietest?
SELECT track_name, loudness
FROM spotifydata
GROUP BY track_name
ORDER BY loudness;
