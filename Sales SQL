#In this SQL, I'm querying a database with multiple tables to quantify customer and order data statistics.


-- This query shows how many orders we received in January.
SELECT 
COUNT(DISTINCT orderID)
FROM JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';


-- This query shows how many of those January orders were for an iPhone.
SELECT 
COUNT(DISTINCT orderID) AS iphone_orders
FROM JanSales
WHERE Product = 'iPhone'
AND LENGTH(orderID) = 6
AND Product <> 'Product';

-- This query selects all customer account numbers for the orders placed in February.
SELECT 
c.acctnum
FROM customers AS c
JOIN FebSales AS fs
ON c.order_ID = fs.orderID
WHERE fs.orderID <> 'Order ID'
AND LENGTH(fs.orderID) = 6;

-- This query shows which product was the cheapest sold in January and its price.
SELECT 
product,
price
FROM JanSales
ORDER BY price ASC
LIMIT 1;

-- This query shows the total revenue for each product sold in January.
SELECT 
product,
ROUND(SUM(quantity*price)) AS revenue
FROM JanSales
WHERE product <> 'Product'
GROUP BY product
ORDER BY revenue DESC;

-- This query shows which products were sold in February at 548 Lincoln St, Seattle, WA 98101, the quantity sold of each, and the total revenue.
SELECT 
product,
SUM(quantity) AS total_sold,
SUM(quantity*price) AS revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- This query shows how many customers ordered more than two products at a time in February and the average amount spent by those customers.
SELECT 
COUNT(DISTINCT c.acctnum) AS total_customers,
ROUND(SUM(quantity*price)/COUNT(DISTINCT c.acctnum)) avg_spent
FROM FebSales fs
LEFT JOIN customers c
ON fs.orderID=c.order_id
WHERE quantity > 2;

-- This query lists all the products sold in Los Angeles in February and includes the quantity sold for each product.
SELECT
product,
SUM(quantity) AS total_sold,
location
FROM FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

-- This query shows which locations in New York received at least three orders in January and how many orders each location received.
SELECT 
location, 
COUNT(orderID) AS order_count
FROM JanSales
WHERE location LIKE '%NY%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

-- This query shows how many of each type of headphones were sold in February.
SELECT 
product, 
SUM(quantity) AS total_quantity
FROM FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;

-- This query shows the average amount spent per account in February.
SELECT
ROUND(SUM(quantity*price)/COUNT(DISTINCT c.acctnum)) AS avg_spent
FROM FebSales fs
JOIN customers c
ON fs.orderID = c.order_id
WHERE order_id <> 'Order ID'
AND LENGTH(order_id) = 6;

-- This query shows the average quantity of products purchased per account in February.
SELECT 
ROUND(SUM(quantity)/COUNT(DISTINCT c.acctnum),2) AS avg_quantity
FROM FebSales fs
JOIN customers c
ON fs.orderID = c.order_id
WHERE orderID <> 'Order ID'
AND LENGTH(orderID) = 6;

-- This query shows which product generated the most revenue in January and its total revenue.
SELECT 
product, 
SUM(quantity*price) AS revenue
FROM JanSales
GROUP BY product
ORDER BY revenue DESC
LIMIT 1;

